spring.application.name=action-dashboard-backend
# Spring Boot 서버 포트 (React 앱과 충돌하지 않도록 8080 사용. React 앱은 5173 사용)
server.port=8080

# MariaDB 데이터베이스 연결 설정 (아직 DB를 만들지 않아도 됩니다. 설정만 해둡니다)
spring.datasource.url=jdbc:mariadb://localhost:3306/action_dashboard_db?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul
spring.datasource.username=root  # MariaDB 설치 시 설정한 사용자 이름
spring.datasource.password=your_mariadb_password # MariaDB 설치 시 설정한 비밀번호
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# JPA (Hibernate) 설정
# ddl-auto: 데이터베이스 스키마를 자동으로 생성/업데이트합니다.
# create-drop: 애플리케이션 시작 시 테이블 생성, 종료 시 삭제 (개발용!)
# create: 애플리케이션 시작 시 테이블 생성
# update: 애플리케이션 시작 시 엔티티 변경 사항 반영 (기존 데이터 유지)
# validate: 애플리케이션 시작 시 엔티티와 DB 스키마 일치 여부 검증
# none: 자동 DDL 비활성화 (운영 환경 권장)
spring.jpa.hibernate.ddl-auto=update # 개발 단계에서 'update' 사용 권장
spring.jpa.show-sql=true # 실행되는 SQL 쿼리를 콘솔에 표시
spring.jpa.properties.hibernate.format_sql=true # SQL 쿼리 포맷팅

# CORS 설정 (프론트엔드 React 앱의 요청을 허용)
# React 개발 서버 포트가 5173이라고 가정
spring.mvc.cors.enabled=true
spring.web.cors.allowed-origins=http://localhost:5173
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true